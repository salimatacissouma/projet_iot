{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      /* Cortex-Debug (marus25)
       * (ARM Cortex-M GDB Debugger support for VSCode)
       *
       * Identifier: marus25.cortex-debug
       * Version: 1.12.1
       * Last Updated: 2025-01-08, 06:14:54
       * Size: 2.8 MB
       * Marketplace:
       *   Published: 2018-01-13, 02:15:11
       *   Last Released: 2023-09-14, 01:08:24
       * URLs:
       *  https://github.com/Marus/cortex-debug/wiki/External-gdb-server-configuration
       *  https://github.com/Marus/cortex-debug/wiki/Cortex-Debug-Under-the-hood
      */
      "cwd": "${workspaceRoot}",
      "executable": "./kernel.elf",
      "name": "Debug with OpenOCD",
      "request": "attach",
      "type": "cortex-debug",
      "servertype": "external",
      "gdbTarget": "localhost:1234",
      "configFiles": [],
      "searchDir": [],
      "runToEntryPoint": "_start",
      "showDevDebugOutput": "none",
    },
    /*
    { // webfreak
      "type": "gdb",
      "request": "attach",
      "name": "Attach to gdbserver",
      "executable": "./kernel.elf",
      "target": "localhost:1234",
      "remote": true,
      "gdbpath": "gdb-multiarch",
      "cwd": "${workspaceRoot}",
      "valuesFormatting": "parseText",
      "stopAtConnect": true,
    },
    { // microsoft
      "name": "cppgdb - QEMU",
      "type": "cppdbg",
      "request": "launch",
      "program": "${workspaceRoot}/kernel.elf",
      "miDebuggerServerAddress": "localhost:1234",
      "args": [],
      "stopAtEntry": true,
      "cwd": "${workspaceRoot}",
      "environment": [],
      "externalConsole": true,
      "launchCompleteCommand": "exec-run",
      "windows": {
          "MIMode": "gdb",
          "miDebuggerPath": "C:\\Program Files (x86)\\GNU Tools ARM Embedded\\8 2018-q4-major\\bin\\arm-none-eabi-gdb.exe"
      },
      "linux": {
          "MIMode": "gdb",
          "miDebuggerPath": "/usr/bin/gdb-multiarch"
      }
  }
      */
  ]
}